#summary Xmemcached release notes.
#labels Phase-Support

= Introduction =
Release Notes.


= Details =

== Xmemcached 1.3.4 release notes ==
 # Enable nagle algorithm by default.
 # Check result returned by inc/dec protocols is number.
 # Make opTimeout can be configured by XMemcachedClientFactoryBean
 # Added RoundRobinMemcachedSessionLocator for kestrel or memcacheq cluster
 # Fixed bug which could cause connection disconnect when decode binary command with error message from memcached.
 # Add a option in KetamaMemcachedSessionLocator to be be compatible with nginx-upstream-consistent.
 # Fixed bugs,include issue 132,issue 142,issue 133,issue 139,issue 142,issue 145,issue 150.

Recommend user using xmemcached binary protocol to upgrade.

== xmemcached 1.3.3 release notes ==

 # Implements touch and GAT(get and touch) commands for memcached 1.6.x,adds new methods to MemcachedClient,includes:
{{{
         boolean touch(String key, int exp, long opTimeout);
         getAndTouch(String key, int newExp, long opTimeout);
}}}
 # Method setLoggingLevelVerbosity works with binary protocol.
 # Make exception infomation more friendly.
 # Deprecated KeyIterator and getKeyIterator.
 # Bug fixed,include:issue 126,issue 127,issue 128,issue 129.
 # Some changes for future version to implement memcached 1.6.x new commands.

== xmemcached 1.3.2 release notes ==

 # Bug fixed,include:issue 113,issue 112
 # Performance turning, 5% performance increase in store commands(add/repleace/set/append/prepend/cas).
 # Modify pom.xml to make it work on other machines.
 # Use github as source repository instead of googlecode svn.Xmemcached source has benn moved to [https://github.com/killme2008/xmemcached https://github.com/killme2008/xmemcached]

== xmemcached 1.3.1 release notes ==

 # Keep memcached servers in input order.
 # Add a new response status 0x06 for binary protocol,which means incr/decr non-number value.

== xmemcached 1.3.0 release notes ==

 # Add failure mode for MemcachedClient.
 # When client is in failure mode,you could also set a standby memcached node for every memcached server,and if a memcached server was down,then further requests to that server will transform to the standby node until server comes back.More information about failure mode and standby node see [FailureMode_StandbyNode]
 # Fixed issues etc.