#labels Phase-Support,Example
= Introduction =
Supports all memcached text based protocols (binary protocol on the road) currently, include  get/gets、set、add、replace、delete、append、prepend、cas、multi get/gets、incr、decr、version、stats、flush_all etc.
=Simple Example=
{{{
MemcachedClient client=new XMemcachedClient("host",11211);

//store a value for one hour(synchronously).
client.set("key",3600,someObject);
//Retrieve a value.(synchronously).
Object someObject=client.get("key");

//delete value
client.delete("key");

}}}

=Add/Remove memcached servers dynamically=

    Xmemcached supports add or remove memcached servers dynamically through programming or JMX MBeans.Add or remove memcached servers example

{{{
   MemcachedClient client=new XMemcachedClient(AddrUtil.getAddresses("server1:11211 server2:11211"));
   //Add two new memcached nodes
   client.addServer("server3:11211 server4:11211");
   //Remove memcached servers
   client.removeServer("server1:11211 server2:11211");
}}}

=Using CAS=

   Using CASOperation instead of using gets and cas method.Here is a simple example.N threads want to increment the value of key "a"
{{{
     //IncrementOperation
     class IncrmentOperation implements CASOperation<Integer> {
		@Override
		public int getMaxTries() {
                        //max repeat times,if great than this value,it will throw TimeoutException.
			return Integer.MAX_VALUE; 
		}

		@Override
		public Integer getNewValue(long currentCAS, Integer currentValue) {
			return currentValue + 1; // increment current value.
		}
	}

       MemcachedClientBuilder builder = new XMemcachedClientBuilder(
					AddrUtil.getAddresses("server1:11211"));
       MemcachedClient client = builder.build();
       //cas operation.
       client.cas("a", 3600, new IncrmentOperation())
   
}}}